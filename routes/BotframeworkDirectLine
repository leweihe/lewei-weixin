var client = require('directline-api-v3');
var secret = 'JmQLHOoxqeg.cwA.UqE.ZeXqmfJ5ncjzD9ZcoOe4tvOW7VDhVHZCMjfEEyZsNDo';
var _tokenObject;
var _conversationWss;
var _watermark = 0;

//noinspection JSAnnotator
client.getTokenObject(secret).subscribe(
    (tokenObject) => {
    _tokenObject = tokenObject;
logger.log('1.1:get token', _tokenObject);

//noinspection JSAnnotator
client.initConversationStream(_tokenObject).subscribe(
    (message) => {
    _conversationWss = message;
logger.log('1.2:info', _conversationWss);
},
(err) => console.log(err),
    () => console.log("1.2:get conversation successfully")
)

//maybe need refresh token here
setTimeout(function () {
    refreshToken()
}, (_tokenObject.expires_in - 30) * 1000);

},
(err) => console.log(err),
    () => console.log('1.1:get token successfully')
)
//=========================================================================================================
function refreshToken() {
    console.log('------------------------refreshToken-----------------------------')
    client.refTokenObject(secret).subscribe(
        (tokenObject) => {
        _tokenObject = tokenObject;
    logger.log('1.3:refresh token', _tokenObject);
},
    (err) => console.log(err),
        () => console.log('1.3:refresh token successfully')
)
}


//send message to bot framework
function sendMessageToBotframework(_tokenObject, messageBody, touserid) {
    client.sendMessage(_tokenObject, messageBody).subscribe(
        (data) => {
        var sendMessageid = data.id;

    //time out function get message from botframework
    setTimeout(function () {
        getmessagefrombotframework(touserid, _tokenObject, sendMessageid, _watermark)
    }, 10000);
},
    (err) => {
        logger.log('2.2:send message to BotFramework error', err);
    },
    () => {
        console.log("2.2:send message to bot botframework successfully");
    }
);
}

//get message from bot framework function
function getmessagefrombotframework(senduserid, tokenobject, sendmsgid, sendwatermark) {
    //noinspection JSAnnotator
    client.getMessage(tokenobject, sendwatermark).subscribe(
        (result) => {

        _watermark = result.watermark;

    //filter activities
    var getResponseMessages = _.where(result.activities, { replyToId: sendmsgid });
    //send message to wechat client
    sendMessageToClient(senduserid, getResponseMessages);

},
    (err) => {
        logger.log('3.1:get message from botframework error', err);
    },
    () => console.log("3.1:get message from botframework successfully")
)
}

//send to message to wechat client
function sendMessageToClient(senduserid, getResponseMessages) {
    if (getResponseMessages) {

        //forEach message
        getResponseMessages.forEach(function (getResponseMessageItem) {

            //process message from botframework
            api.sendText(senduserid, getResponseMessageItem.text, function (err, result) {
                if (err) {
                    logger.log('3.2:reply wechat client (' + senduserid + ') message error', err);
                }
            });


            //process attachment
            if (getResponseMessageItem.attachments) {
                getResponseMessageItem.attachments.forEach(function (getResponseMessageAttachmentItem) {
                    if (getResponseMessageAttachmentItem.contentType == 'application/vnd.microsoft.card.thumbnail' || getResponseMessageAttachmentItem.contentType == 'application/vnd.microsoft.card.hero')

                    //-------------upload media
                        api.uploadMedia(getResponseMessageAttachmentItem.content.images[0].url, 'image', function (err, result) {
                            // console.log('start upload image' + result);
                            if (err) {
                                logger.log('3.4:upload image error', err);
                            }
                            else {
                                //-------------send image
                                api.sendImage(senduserid, result.media_id, function (err, result) {
                                    if (err) {
                                        logger.log('3.5:send image wechat client (' + senduserid + ') attachment error', err);
                                    }
                                });
                                //-------------
                            }
                        });
                    //-------------


                    api.sendText(senduserid, getResponseMessageAttachmentItem.content.title + '\r' + getResponseMessageAttachmentItem.content.subtitle + '\r' + getResponseMessageAttachmentItem.content.text, function (err, result) {
                        if (err) {
                            logger.log('3.3:reply wechat client (' + senduserid + ') attachment error', err);
                        }
                    });

                });
            }
        });


    }
}